openapi: "3.0.1"
info:
  title: SnappPay Credit Service
  contact: {}
  version: "1.0"
  description: SnappPay Credit Service api documentation for developers
servers:
  - url: http://snapp-pay-credit-service.test/api/v1
  - url: http://localhost:8000/api/v1

paths:

  # auth

  # users
  /users:
    get:
      tags:
        - User
      summary: "get all users"
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          schema:
            enum:
              - application/json
            type: string
            example: application/json
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ArrayOfUsers'
        '401':
          description: Authorization information is missing or invalid.
        '5XX':
          description: Unexpected error.
      security: []
      deprecated: false
  /users/{user:id}:
    get:
      tags:
        - User
      summary: "show user details"
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          schema:
            enum:
              - application/json
            type: string
            example: application/json
        - name: user:id
          in: path
          description: "user id"
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: show user
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        '401':
          description: Authorization information is missing or invalid.
        '404':
          description: A user with the specified ID was not found.
        '5XX':
          description: Unexpected error.
      security: []
      deprecated: false

  # products
  /products:
    get:
      tags:
        - Product
      summary: "get all products"
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          schema:
            enum:
              - application/json
            type: string
            example: application/json
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ArrayOfProducts'
        '401':
          description: Authorization information is missing or invalid.
        '5XX':
          description: Unexpected error.
      security: []
      deprecated: false
  /products/{product:id}:
    get:
      tags:
        - Product
      summary: "show product details"
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          schema:
            enum:
              - application/json
            type: string
            example: application/json
        - name: product:id
          in: path
          description: "product id"
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: show product
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Product'
        '401':
          description: Authorization information is missing or invalid.
        '404':
          description: A product with the specified ID was not found.
        '5XX':
          description: Unexpected error.
      security: []
      deprecated: false

  # credit-packages
  /credit-packages:
    get:
      tags:
        - CreditPackage
      summary: "get all CreditPackages"
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          schema:
            enum:
              - application/json
            type: string
            example: application/json
      responses:
        '200':
          description: A list of credit-packages
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ArrayOfCreditPackages'
        '401':
          description: Authorization information is missing or invalid.
        '5XX':
          description: Unexpected error.
      security: []
      deprecated: false
  /credit-packages/{credit-package:id}:
    get:
      tags:
        - CreditPackage
      summary: "show CreditPackage details"
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          schema:
            enum:
              - application/json
            type: string
            example: application/json
        - name: credit-package:id
          in: path
          description: "credit-package id"
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: show credit-package
          content:
            application/json:
              schema:
                $ref: '#/components/responses/CreditPackage'
        '401':
          description: Authorization information is missing or invalid.
        '404':
          description: A credit-package with the specified ID was not found.
        '5XX':
          description: Unexpected error.
      security: []
      deprecated: false

  # transactions
  /transactions:
    get:
      tags:
        - Transaction
      summary: "get all transactions"
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          schema:
            enum:
              - application/json
            type: string
            example: application/json
      responses:
        '200':
          description: A list of transactions
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/ArrayOfTransactionsWithProduct'
                  - $ref: '#/components/responses/ArrayOfTransactionsWithCreditPackages'
                discriminator:
                  propertyName: objectType
        '401':
          description: Authorization information is missing or invalid.
        '5XX':
          description: Unexpected error.
      security: []
      deprecated: false
  /transactions/{transaction:id}:
    get:
      tags:
        - Transaction
      summary: "show transaction details"
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          schema:
            enum:
              - application/json
            type: string
            example: application/json
        - name: transaction:id
          in: path
          description: "transaction id"
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: show transaction
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Transaction'
        '401':
          description: Authorization information is missing or invalid.
        '404':
          description: A transaction with the specified ID was not found.
        '5XX':
          description: Unexpected error.
      security: []
      deprecated: false





components:
  schemas:
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        email:
          type: "string"
        wallet_balance:
          type: "integer"
          format: "int64"
        email_verifed_at:
          type: "timestamp"
        password:
          type: "string"
        rember_token:
          type: "string"
        deleted_at:
          type: "timestamp"
        created_at:
          type: "timestamp"
        updated_at:
          type: "timestamp"
      xml:
        name: "User"
    Product:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        price:
          type: "integer"
        deleted_at:
          type: "timestamp"
        created_at:
          type: "timestamp"
        updated_at:
          type: "timestamp"
      xml:
        name: "Product"
    CreditPackage:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        price:
          type: "integer"
        payment_deadline_by_days:
          type: "integer"
        deleted_at:
          type: "timestamp"
        created_at:
          type: "timestamp"
        updated_at:
          type: "timestamp"
      xml:
        name: "CreditPackage"
    Transaction:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        old_user_wallet_balance:
          type: "integer"
        price:
          type: "integer"
        new_user_wallet_balance:
          type: "integer"
        is_incremental:
          type: "boolean"
        user_id:
          type: "fk"
          format: "int64"
        transactionable_id:
          type: "fk"
          format: "int64"
        transactionable_type:
          type: "string"
        deleted_at:
          type: "timestamp"
        created_at:
          type: "timestamp"
        updated_at:
          type: "timestamp"
      xml:
        name: "Transaction"
  responses:
    User:
      type: "object"
      properties:
        id:
          type: "integer"
        name:
          type: "string"
        email:
          type: "string"
        wallet_balance:
          type: "integer"
          format: "int64"
        links:
          type: "object"
          properties:
            self:
              type: "string"
            parent:
              type: "string"
    ArrayOfUsers:
      type: "array"
      items:
        $ref: '#/components/responses/User'
    Product:
      type: "object"
      properties:
        id:
          type: "integer"
        name:
          type: "string"
        price:
          type: "integer"
        links:
          type: "object"
          properties:
            self:
              type: "string"
            parent:
              type: "string"
    ArrayOfProducts:
      type: "array"
      items:
        $ref: '#/components/responses/Product'
    CreditPackage:
      type: "object"
      properties:
        id:
          type: "integer"
        name:
          type: "string"
        price:
          type: "integer"
        payment_deadline_by_days:
          type: "integer"
        links:
          type: "object"
          properties:
            self:
              type: "string"
            parent:
              type: "string"
    ArrayOfCreditPackages:
      type: "array"
      items:
        $ref: '#/components/responses/CreditPackage'
    Transaction:
      type: "object"
      properties:
        id:
          type: "integer"
        old_user_wallet_balance:
          type: "integer"
        price:
          type: "integer"
        new_user_wallet_balance:
          type: "integer"
        is_increment:
          type: "boolean"
        user:
          type: "object"
          $ref: '#/components/responses/User'
        transactionable:
          type: "object"
          oneOf:
            - $ref: '#/components/responses/CreditPackage'
            - $ref: '#/components/responses/Product'
        links:
          type: "object"
          properties:
            self:
              type: "string"
            parent:
              type: "string"
    TransactionWithProduct:
      type: "object"
      properties:
        id:
          type: "integer"
        old_user_wallet_balance:
          type: "integer"
        price:
          type: "integer"
        new_user_wallet_balance:
          type: "integer"
        is_increment:
          type: "boolean"
        user:
          type: "object"
          $ref: '#/components/responses/User'
        transactionable:
          type: "object"
          $ref: '#/components/responses/Product'
        links:
          type: "object"
          properties:
            self:
              type: "string"
            parent:
              type: "string"
    TransactionWithCreditPackages:
      type: "object"
      properties:
        id:
          type: "integer"
        old_user_wallet_balance:
          type: "integer"
        price:
          type: "integer"
        new_user_wallet_balance:
          type: "integer"
        is_increment:
          type: "boolean"
        user:
          type: "object"
          $ref: '#/components/responses/User'
        transactionable:
          type: "object"
          $ref: '#/components/responses/CreditPackage'
        links:
          type: "object"
          properties:
            self:
              type: "string"
            parent:
              type: "string"
    ArrayOfTransactionsWithProduct:
      type: "array"
      items:
        $ref: '#/components/responses/TransactionWithProduct'
    ArrayOfTransactionsWithCreditPackages:
      type: "array"
      items:
        $ref: '#/components/responses/TransactionWithCreditPackages'


securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
security:
  - BearerAuth: []
tags:
  - name: User
  - name: Product
  - name: CreditPackage
  - name: Transaction

  # - name: Role
  # - name: Permission
  # - name: category
  # - name: PriceList
